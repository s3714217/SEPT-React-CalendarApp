{"ast":null,"code":"import _classCallCheck from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/src/components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this)); //Error 1\n\n    _this.state = {\n      counter: 0\n    };\n    _this.increment = _this.increment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.decrement = _this.decrement.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(CounterButton, {\n        by: 1,\n        incrementMethod: this.increment,\n        decrementMethod: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(CounterButton, {\n        by: 5,\n        incrementMethod: this.increment,\n        decrementMethod: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(CounterButton, {\n        by: 10,\n        incrementMethod: this.increment,\n        decrementMethod: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.state.counter), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Reset\")));\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setState({\n        counter: 0\n      });\n    }\n  }, {\n    key: \"increment\",\n    value: function increment(by) {\n      //console.log(`increment from child - ${by}`)\n      this.setState(function (prevState) {\n        return {\n          counter: prevState.counter + by\n        };\n      });\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement(by) {\n      //console.log(`increment from child - ${by}`)\n      this.setState(function (prevState) {\n        return {\n          counter: prevState.counter - by\n        };\n      });\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nvar CounterButton =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(CounterButton, _Component2);\n\n  function CounterButton() {\n    _classCallCheck(this, CounterButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CounterButton).apply(this, arguments));\n  }\n\n  _createClass(CounterButton, [{\n    key: \"render\",\n    //Define the initial state in a constructor\n    //state => counter 0\n    //constructor() {\n    //    super(); //Error 1\n    //   this.state = {\n    //       counter : 0\n    //   }\n    //   this.increment = this.increment.bind(this);\n    //   this.decrement = this.decrement.bind(this);\n    //}\n    value: function render() {\n      var _this2 = this;\n\n      //render = () =>  {\n      //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.incrementMethod(_this2.props.by);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"+\", this.props.by), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.decrementMethod(_this2.props.by);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"-\", this.props.by));\n    } //   increment() { //Update state - counter++\n    //    //console.log('increment');\n    //     //this.state.counter++; //Bad Practice\n    //     this.setState({\n    //         counter: this.state.counter + this.props.by\n    //     });\n    //     this.props.incrementMethod(this.props.by);\n    //   }\n    //   decrement () {\n    //     this.setState({\n    //         counter: this.state.counter - this.props.by\n    //     });\n    //     this.props.decrementMethod(this.props.by);\n    //   }\n\n  }]);\n\n  return CounterButton;\n}(Component);\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/src/components/counter/Counter.jsx"],"names":["React","Component","PropTypes","Counter","state","counter","increment","bind","decrement","reset","setState","by","prevState","CounterButton","props","incrementMethod","decrementMethod","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\nclass Counter extends Component {\n\n    constructor() {\n\n        super(); //Error 1\n\n        this.state = {\n            counter: 0\n        }\n\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"counter\">\n                <CounterButton by={1} incrementMethod={this.increment} decrementMethod={this.decrement} />\n                <CounterButton by={5} incrementMethod={this.increment} decrementMethod={this.decrement} />\n                <CounterButton by={10} incrementMethod={this.increment} decrementMethod={this.decrement} />\n                <span className=\"count\">{this.state.counter}</span>\n                <div><button className=\"reset\" onClick={this.reset}>Reset</button></div>\n            </div>\n        );\n    }\n\n    reset() {\n        this.setState({ counter: 0 });\n    }\n\n    increment(by) {\n        //console.log(`increment from child - ${by}`)\n        this.setState(\n            (prevState) => {\n                return { counter: prevState.counter + by }\n            }\n        );\n    }\n\n    decrement(by) {\n        //console.log(`increment from child - ${by}`)\n        this.setState(\n            (prevState) => {\n                return { counter: prevState.counter - by }\n            }\n        );\n    }\n\n}\n\nclass CounterButton extends Component {\n    //Define the initial state in a constructor\n    //state => counter 0\n    //constructor() {\n    //    super(); //Error 1\n\n    //   this.state = {\n    //       counter : 0\n    //   }\n\n    //   this.increment = this.increment.bind(this);\n    //   this.decrement = this.decrement.bind(this);\n    //}\n\n    render() {\n        //render = () =>  {\n        //const style = {fontSize : \"50px\", padding : \"15px 30px\"};\n        return (\n            <div className=\"counter\">\n                <button onClick={() => this.props.incrementMethod(this.props.by)} >+{this.props.by}</button>\n                <button onClick={() => this.props.decrementMethod(this.props.by)} >-{this.props.by}</button>\n                {/*<span className=\"count\" \n            >{this.state.counter}</span>*/}\n            </div>\n        )\n    }\n\n    //   increment() { //Update state - counter++\n    //    //console.log('increment');\n    //     //this.state.counter++; //Bad Practice\n    //     this.setState({\n    //         counter: this.state.counter + this.props.by\n    //     });\n\n    //     this.props.incrementMethod(this.props.by);\n    //   }\n\n    //   decrement () {\n    //     this.setState({\n    //         counter: this.state.counter - this.props.by\n    //     });\n\n    //     this.props.decrementMethod(this.props.by);\n    //   }\n}\n\nCounterButton.defaultProps = {\n    by: 1\n}\n\nCounterButton.propTypes = {\n    by: PropTypes.number\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}