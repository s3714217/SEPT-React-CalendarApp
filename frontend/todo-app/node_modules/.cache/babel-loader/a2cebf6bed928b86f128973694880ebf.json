{"ast":null,"code":"import _defineProperty from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/ForgotPasswordComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar ForgotPasswordComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPasswordComponent, _Component);\n\n  function ForgotPasswordComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPasswordComponent).call(this, props));\n    _this.state = {\n      username: '',\n      first_security_question: '',\n      second_security_question: '',\n      third_security_question: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n      usernameDoesNotExist: false,\n      notEnteredUsername: false\n    };\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.recoverPasswordClicked = _this.recoverPasswordClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ForgotPasswordComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(event) {\n      console.log(event.target.name);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(event) {\n      console.log(event.target.value);\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"recoverPasswordClicked\",\n    value: function recoverPasswordClicked() {\n      if (this.state.username.length === 0) {\n        this.setState({\n          notEnteredUsername: true\n        });\n      } else {\n        this.setState({\n          notEnteredUsername: true\n        });\n\n        if (this.username === 'Mohammed') {\n          if (this.state.first_security_question.length != 0 && this.state.second_security_question.length != 0 && this.state.third_security_question.length != 0) {\n            // for now, let's try and redirect only.\n            this.setState({\n              showSuccessMessage: true\n            });\n            this.setState({\n              hasLoginFailed: false\n            });\n            this.props.history.push(\"/recoverpaasword/\".concat(this.state.username));\n            this.setState({\n              showSuccessMessage: true\n            });\n            this.setState({\n              hasLoginFailed: false\n            });\n          } else {\n            this.setState({\n              showSuccessMessage: false\n            });\n            this.setState({\n              hasLoginFailed: true\n            });\n          }\n        } else {\n          this.setState({\n            usernameDoesNotExist: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Recover Password\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.notEnteredUsername && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Enter your username\"), this.state.usernameDoesNotExist && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Username doesn't exist in our database\"), this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Please make sure not to leave any field empty\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Login Sucessful\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Please Answer these Security Questions for the Purpose of Recovring your Account\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \"Enter your username? \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"What is your favorite color? \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"first_security_question\",\n        value: this.state.first_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"What is your father name? \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"second_security_question\",\n        value: this.state.second_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), \"What is your mother's middle name? \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"third_security_question\",\n        value: this.state.third_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.recoverPasswordClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Recover Password\")));\n    }\n  }]);\n\n  return ForgotPasswordComponent;\n}(Component);\n\nexport default ForgotPasswordComponent;","map":{"version":3,"sources":["/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/ForgotPasswordComponent.jsx"],"names":["React","Component","AuthenticationService","ForgotPasswordComponent","props","state","username","first_security_question","second_security_question","third_security_question","hasLoginFailed","showSuccessMessage","usernameDoesNotExist","notEnteredUsername","handleUsernameChange","bind","handlePasswordChange","handleChange","recoverPasswordClicked","event","console","log","setState","target","name","value","password","length","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ForgotPasswordComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            first_security_question : '',\n            second_security_question: '',\n            third_security_question: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false,\n            usernameDoesNotExist: false,\n            notEnteredUsername: false\n        }\n        this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.recoverPasswordClicked = this.recoverPasswordClicked.bind(this)\n    }\n\n    handleChange(event) {\n        console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    handleUsernameChange(event) {\n        console.log(event.target.name);\n        this.setState(\n            {\n                [event.target.name]\n                  :event.target.value\n            }\n        )\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.value);\n        this.setState({password:event.target.value})\n    }\n\n    recoverPasswordClicked() {\n\n        if (this.state.username.length === 0) {\n            this.setState({notEnteredUsername:true})\n        }else {\n            this.setState({notEnteredUsername:true})\n        if (this.username === 'Mohammed') {\n            if (this.state.first_security_question.length != 0 &&\n                this.state.second_security_question.length != 0 &&\n                this.state.third_security_question.length != 0) {\n                // for now, let's try and redirect only.\n                this.setState({showSuccessMessage:true})\n                this.setState({hasLoginFailed:false})\n                this.props.history.push(`/recoverpaasword/${this.state.username}`)\n                this.setState({showSuccessMessage:true})\n                this.setState({hasLoginFailed:false})\n            }\n            else {\n                this.setState({showSuccessMessage:false})\n                this.setState({hasLoginFailed:true})\n            }\n        }     \n        else {\n            this.setState({usernameDoesNotExist:true})\n        }\n        }\n\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>Recover Password</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>p*/}\n                    {this.state.notEnteredUsername && <div className=\"alert alert-warning\">Enter your username</div>}\n                    {this.state.usernameDoesNotExist && <div className=\"alert alert-warning\">Username doesn't exist in our database</div>}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Please make sure not to leave any field empty</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    <h5>Please Answer these Security Questions for the Purpose of Recovring your Account</h5>\n                    <br></br>\n                    Enter your username? <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    <br></br>\n                    What is your favorite color? <input type=\"text\" name=\"first_security_question\" value={this.state.first_security_question} onChange={this.handleChange} />\n                    <br></br>\n                    What is your father name? <input type=\"text\" name=\"second_security_question\" value={this.state.second_security_question} onChange={this.handleChange} />\n                    <br></br>\n                    What is your mother's middle name? <input type=\"text\" name=\"third_security_question\" value={this.state.third_security_question} onChange={this.handleChange} />\n                    <br></br> \n                    <button className=\"btn btn-success\" onClick={this.recoverPasswordClicked}>Recover Password</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ForgotPasswordComponent"]},"metadata":{},"sourceType":"module"}