{"ast":null,"code":"import _classCallCheck from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar TodoComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoComponent, _Component);\n\n  function TodoComponent(props) {\n    var _this;\n\n    _classCallCheck(this, TodoComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoComponent).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD'),\n      title: ' ',\n      location: ' '\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.id === -1) {\n        return;\n      }\n\n      var username = AuthenticationService.getLoggedInUserName(); //    TodoDataService.retrieveTodo(username, this.state.id)\n      //        .then(response => this.setState({\n      //            description: response.data.description,\n      //            targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n      //        }))\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.title) {\n        errors.title = 'Enter a Title';\n      } else if (values.title.length < 5) {\n        errors.title = 'Enter at least 3 Characters in Title';\n      }\n\n      if (!values.description) {\n        errors.description = 'Enter a Description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter at least 5 Characters in Description';\n      }\n\n      if (!values.location) {\n        errors.location = 'Enter a location of the event';\n      } else if (values.location.length < 5) {\n        errors.location = 'Enter at least 5 Characters in Location';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Enter a valid Target Date';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var username = AuthenticationService.getLoggedInUserName();\n      var todo = {\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate,\n        title: values.title,\n        location: values.location //   if (this.state.id === -1) {\n        //       TodoDataService.createTodo(username, todo)\n        //          .then(() => this.props.history.push('/todos'))\n        // } else {\n        //     TodoDataService.updateTodo(username, this.state.id, todo)\n        //          .then(() => this.props.history.push('/todos'))\n        //  }\n\n      };\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          description = _this$state.description,\n          targetDate = _this$state.targetDate,\n          location = _this$state.location,\n          title = _this$state.title; //let targetDate = this.state.targetDate\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Add Event\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          title: title,\n          description: description,\n          targetDate: targetDate,\n          location: location\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"targetDate\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"location\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"title\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Title\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Description\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Target Date\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"date\",\n          name: \"targetDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Location\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Add\"));\n      })));\n    }\n  }]);\n\n  return TodoComponent;\n}(Component);\n\nexport default TodoComponent;","map":{"version":3,"sources":["/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","AuthenticationService","TodoComponent","props","state","id","match","params","description","targetDate","Date","format","title","location","onSubmit","bind","validate","username","getLoggedInUserName","values","errors","length","isValid","todo","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\n            title: ' ',\n            location: ' ',\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        if (this.state.id === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUserName()\n\n    //    TodoDataService.retrieveTodo(username, this.state.id)\n    //        .then(response => this.setState({\n    //            description: response.data.description,\n    //            targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n    //        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if (!values.title) {\n            errors.title = 'Enter a Title'\n        } else if (values.title.length < 5) {\n            errors.title = 'Enter at least 3 Characters in Title'\n        }\n        \n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter at least 5 Characters in Description'\n        }\n        \n        if (!values.location) {\n            errors.location = 'Enter a location of the event'\n        } else if (values.location.length < 5) {\n            errors.location= 'Enter at least 5 Characters in Location'\n        }\n    \n\n        if (!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate,\n            title: values.title,\n            location: values.location,\n        }\n\n     //   if (this.state.id === -1) {\n     //       TodoDataService.createTodo(username, todo)\n      //          .then(() => this.props.history.push('/todos'))\n       // } else {\n       //     TodoDataService.updateTodo(username, this.state.id, todo)\n      //          .then(() => this.props.history.push('/todos'))\n      //  }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, targetDate, location, title} = this.state\n        //let targetDate = this.state.targetDate\n\n        return (\n            <div>\n                <h1>Add Event</h1>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ title, description, targetDate, location}}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"targetDate\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"location\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"title\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    \n                                    \n                                    <fieldset className=\"form-group\">\n                                        <label>Title</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"title\" />\n                                    </fieldset>\n                                    \n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    \n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\n                                    </fieldset>\n                                    \n                                    <fieldset className=\"form-group\">\n                                        <label>Location</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"location\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Add</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}