{"ast":null,"code":"import _classCallCheck from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment';\n\nvar ListTodosComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListTodosComponent, _Component);\n\n  function ListTodosComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ListTodosComponent);\n\n    console.log('constructor');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListTodosComponent).call(this, props));\n    _this.state = {\n      momentContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false\n    };\n    _this.weekdays = moment.weekdays();\n    _this.weekdaysShort = moment.weekdaysShort();\n    _this.months = moment.months();\n\n    _this.year = function () {\n      return _this.state.dateContext.format('Y');\n    };\n\n    _this.month = function () {\n      return _this.state.dateContext.format('MMMM');\n    };\n\n    _this.daysInMonth = function () {\n      return _this.state.dateContext.format('');\n    };\n\n    _this.currentDate = function () {\n      return _this.state.dateContext.format('date');\n    };\n\n    _this.currentDay = function () {\n      return _this.state.dateContext.format('D');\n    };\n\n    _this.width = props.width || '350px';\n    _this.style = props.style || {};\n    _this.state = {\n      todos: [],\n      message: null\n    };\n    _this.deleteTodoClicked = _this.deleteTodoClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTodoClicked = _this.updateTodoClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTodoClicked = _this.addTodoClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.refreshTodos = _this.refreshTodos.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListTodosComponent, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('componentWillUnmount');\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log('shouldComponentUpdate');\n      console.log(nextProps);\n      console.log(nextState);\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('componentDidMount');\n      this.refreshTodos();\n      console.log(this.state);\n    }\n  }, {\n    key: \"refreshTodos\",\n    value: function refreshTodos() {\n      var _this2 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveAllTodos(username).then(function (response) {\n        //console.log(response);\n        _this2.setState({\n          todos: response.data\n        });\n      });\n    }\n  }, {\n    key: \"deleteTodoClicked\",\n    value: function deleteTodoClicked(id) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName(); //console.log(id + \" \" + username);\n\n      TodoDataService.deleteTodo(username, id).then(function (response) {\n        _this3.setState({\n          message: \"Delete of todo \".concat(id, \" Successful\")\n        });\n\n        _this3.refreshTodos();\n      });\n    }\n  }, {\n    key: \"addTodoClicked\",\n    value: function addTodoClicked() {\n      this.props.history.push(\"/todos/-1\");\n    }\n  }, {\n    key: \"updateTodoClicked\",\n    value: function updateTodoClicked(id) {\n      console.log('update ' + id);\n      this.props.history.push(\"/todos/\".concat(id)); // /todos/${id}\n      // let username = AuthenticationService.getLoggedInUserName()\n      // //console.log(id + \" \" + username);\n      // TodoDataService.deleteTodo(username, id)\n      //  .then (\n      //      response => {\n      //         this.setState({message : `Delete of todo ${id} Successful`})\n      //         this.refreshTodos()\n      //      }\n      //  )\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('render');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Calendar\"));\n    }\n  }]);\n\n  return ListTodosComponent;\n}(Component);\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/Mohammed/Desktop/RMIT1950/COSC2299 - Software Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodosComponent","props","console","log","state","momentContext","today","showMonthPopup","showYearPopup","weekdays","weekdaysShort","months","year","dateContext","format","month","daysInMonth","currentDate","currentDay","width","style","todos","message","deleteTodoClicked","bind","updateTodoClicked","addTodoClicked","refreshTodos","nextProps","nextState","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","id","deleteTodo","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass ListTodosComponent extends Component {\n    constructor(props) {\n        console.log('constructor')\n        super(props)\n        this.width = props.width || '350px';\n        this.style = props.style || {};\n        this.state = {\n            todos: [],\n            message: null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n    }\n\n\n    state = {\n        momentContext: moment(),\n        today: moment(),\n        showMonthPopup: false,\n        showYearPopup: false\n    }\n\n    weekdays = moment.weekdays(); // ['Sunday', 'Monday', ...]\n    weekdaysShort = moment.weekdaysShort(); // ['Sun', 'Mon', 'Tue', ...]\n    months = moment.months();\n\n    year = () => {\n        return this.state.dateContext.format('Y');\n    }\n    month = () => {\n        return this.state.dateContext.format('MMMM');\n    }\n    daysInMonth = () => {\n        return this.state.dateContext.format('');\n    }\n    currentDate = () => {\n        return this.state.dateContext.format('date');\n    }\n    currentDay = () => {\n        return this.state.dateContext.format('D');\n    }\n\n\n\n    \n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.refreshTodos();\n        console.log(this.state)\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.setState({ todos: response.data })\n                }\n            )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id + \" \" + username);\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of todo ${id} Successful` })\n                    this.refreshTodos()\n                }\n            )\n\n    }\n\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    updateTodoClicked(id) {\n        console.log('update ' + id)\n        this.props.history.push(`/todos/${id}`)\n        // /todos/${id}\n        // let username = AuthenticationService.getLoggedInUserName()\n        // //console.log(id + \" \" + username);\n        // TodoDataService.deleteTodo(username, id)\n        //  .then (\n        //      response => {\n        //         this.setState({message : `Delete of todo ${id} Successful`})\n        //         this.refreshTodos()\n        //      }\n        //  )\n\n    }\n\n    render() {\n        console.log('render')\n        return (\n            <div>\n                <h1>Calendar</h1>\n                {/* {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>IsCompleted?</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map(\n                                    todo =>\n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}