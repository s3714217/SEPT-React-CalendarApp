{"ast":null,"code":"import _defineProperty from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport PostData from './MockJSONdata/MockUsers.json';\n\nvar LoginComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginComponent).call(this, props));\n    _this.state = {\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    var fileUserName = [];\n    var filePasswords = [];\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loginClicked = _this.loginClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registrationClicked = _this.registrationClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.forgotPasswordClicked = _this.forgotPasswordClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(event) {\n      console.log(event.target.name);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(event) {\n      console.log(event.target.value);\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"validateUser\",\n    value: function validateUser(userName, passwrd) {\n      if (this.state.username === userName && this.state.password === passwrd) {\n        return true;\n      }\n    }\n  }, {\n    key: \"loginClicked\",\n    value: function loginClicked(userName, passwrd) {\n      var _this2 = this;\n\n      if (this.validateUser(userName, passwrd) === true) {\n        AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n        this.props.history.push(\"/welcome/\".concat(this.state.username));\n        this.setState({\n          showSuccessMessage: true\n        });\n        this.setState({\n          hasLoginFailed: false\n        });\n      } else {\n        this.setState({\n          showSuccessMessage: false\n        });\n        this.setState({\n          hasLoginFailed: true\n        });\n      }\n\n      AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(function () {\n        AuthenticationService.registerSuccessfulLogin(_this2.state.username, _this2.state.password);\n\n        _this2.props.history.push(\"/welcome/\".concat(_this2.state.username));\n      }).catch(function () {\n        _this2.setState({\n          showSuccessMessage: false\n        });\n\n        _this2.setState({\n          hasLoginFailed: true\n        });\n      });\n      AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(function (response) {\n        AuthenticationService.registerSuccessfulLoginForJwt(_this2.state.username, response.data.token);\n\n        _this2.props.history.push(\"/welcome/\".concat(_this2.state.username));\n      }).catch(function () {\n        _this2.setState({\n          showSuccessMessage: false\n        });\n\n        _this2.setState({\n          hasLoginFailed: true\n        });\n      });\n    } // if user clicks on registration button, then switch to registration page\n\n  }, {\n    key: \"registrationClicked\",\n    value: function registrationClicked() {\n      this.props.history.push(\"/register/\");\n    } // if user clicks on forgotPassword button, then switch to forgotPassword page\n\n  }, {\n    key: \"forgotPasswordClicked\",\n    value: function forgotPasswordClicked() {\n      this.props.history.push(\"/forgotpassword/\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Invalid Credentials or something is wrong\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Login Sucessful\"), \"User Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \"Password: \", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: PostData.map(function (users, index) {\n          return _this3.validateUser(users.userName, users.password);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-register\",\n        onClick: this.registrationClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Registration\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-register\",\n        onClick: this.forgotPasswordClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Forgot Password\")));\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","PostData","LoginComponent","props","state","username","password","hasLoginFailed","showSuccessMessage","fileUserName","filePasswords","handleUsernameChange","bind","handlePasswordChange","handleChange","loginClicked","registrationClicked","forgotPasswordClicked","event","console","log","setState","target","name","value","userName","passwrd","validateUser","registerSuccessfulLogin","history","push","executeBasicAuthenticationService","then","catch","executeJwtAuthenticationService","response","registerSuccessfulLoginForJwt","data","token","map","users","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport PostData from './MockJSONdata/MockUsers.json'\n\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        const fileUserName = [];\n        const filePasswords = [];\n\n        this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n        this.registrationClicked = this.registrationClicked.bind(this)\n        this.forgotPasswordClicked = this.forgotPasswordClicked.bind(this)\n    }\n    \n\n\n    handleChange(event) {\n        console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n\n    handleUsernameChange(event) {\n        console.log(event.target.name);\n        this.setState(\n            {\n                [event.target.name]\n                  :event.target.value\n            }\n        )\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.value);\n        this.setState({password:event.target.value})\n    }\n\n    validateUser(userName, passwrd) {\n        if(this.state.username===userName && this.state.password===passwrd){\n            return true\n        }\n    }\n\n    loginClicked(userName, passwrd) {\n        \n        if(this.validateUser(userName, passwrd)===true){\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n            this.props.history.push(`/welcome/${this.state.username}`)\n            this.setState({showSuccessMessage:true})\n            this.setState({hasLoginFailed:false})\n        }\n        else {\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n        }\n\n        AuthenticationService\n        .executeBasicAuthenticationService(this.state.username, this.state.password)\n        .then(() => {\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n            this.props.history.push(`/welcome/${this.state.username}`)\n        }).catch( () =>{\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n        })\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    // if user clicks on registration button, then switch to registration page\n    registrationClicked() {\n        this.props.history.push(`/register/`)\n    }\n\n    // if user clicks on forgotPassword button, then switch to forgotPassword page\n    forgotPasswordClicked() {\n        this.props.history.push(`/forgotpassword/`)\n    }\n\n    \n    render() {\n        return (\n            <div>\n                {/* {PostData.map((users, index)=>{\n                return (this.validateUser(users.userName, users.password))\n            })} */}\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials or something is wrong</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/* <ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/> */}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={PostData.map((users, index)=>{\n                return (this.validateUser(users.userName, users.password))\n            })} >Login</button>\n                    <br></br>\n                    <button className=\"btn btn-register\" onClick={this.registrationClicked}>Registration</button>\n                    <br></br>\n                    <button className=\"btn btn-register\" onClick={this.forgotPasswordClicked}>Forgot Password</button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}