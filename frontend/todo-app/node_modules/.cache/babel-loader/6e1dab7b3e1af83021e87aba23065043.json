{"ast":null,"code":"import _defineProperty from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/RegistrationComponent.jsx\";\nimport React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport * as EmailValidator from \"email-validator\";\nimport PostData from \"./MockJSONdata/MockUsers.json\";\n\nvar RegistrationComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegistrationComponent, _Component);\n\n  function RegistrationComponent(props) {\n    var _this;\n\n    _classCallCheck(this, RegistrationComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistrationComponent).call(this, props));\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      confirmed_password: \"\",\n      email_address: \"\",\n      first_security_question: \"\",\n      second_security_question: \"\",\n      third_security_question: \"\",\n      showSuccessMessage: false,\n      notProvidedUserName: false,\n      invalidEmail: false,\n      notProvidedEmail: false\n    };\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registerClicked = _this.registerClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RegistrationComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(event) {\n      console.log(event.target.name);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(event) {\n      console.log(event.target.value);\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"registerClicked\",\n    value: function registerClicked() {\n      AuthenticationService.executeJwtAuthenticationService(\"sept\", \"dummy\").then(function (response) {\n        AuthenticationService.registerSuccessfulLoginForJwt(\"sept\", response.data.token);\n      }); // check if all fields are not empty and both passwords match and email is valid\n\n      if (this.state.username.length != 0 && this.state.password.length != 0 && this.state.password.length > 6 && this.state.password === this.state.confirmed_password && this.state.email_address.length != 0 && EmailValidator.validate(this.state.email_address) === true && this.state.first_security_question.length != 0 && this.state.first_security_question.length > 5 && this.state.second_security_question.length != 0 && this.state.second_security_question.length > 5 && this.state.third_security_question.length != 0 && this.state.third_security_question.length > 5) {\n        // TodoDataService.createTodo(this.state)\n        // .then(() => this.props.history.push('/login'))\n        //    AuthenticationService.RegisterAuthenticationService(this.state)\n        //    .then(() => this.props.history.push('/login'))\n        // redirect ot the main page\n        this.props.history.push(\"/login/\");\n      } // check if username length is equal to zero\n\n\n      if (this.state.username.length == 0) {\n        // display error message\n        this.setState({\n          notProvidedUserName: true\n        });\n      } else {\n        // discard error message\n        this.setState({\n          notProvidedUserName: false\n        });\n      } // check if email length is equal to zero\n\n\n      if (this.state.email_address.length === 0) {\n        // display error message\n        this.setState({\n          notProvidedEmail: true\n        });\n      } else {\n        // discard error message\n        this.setState({\n          notProvidedEmail: false\n        });\n      } // check if username length doesn't equal to zero and its valid\n\n\n      if (this.state.email_address.length != 0 && EmailValidator.validate(this.state.email_address) === false) {\n        // display error message\n        this.setState({\n          invalidEmail: true\n        });\n      } else {\n        // discard error message\n        this.setState({\n          invalidEmail: false\n        });\n      } // check if password length is less than 6 characters\n\n\n      if (this.state.password.length <= 6) {\n        // display error message\n        this.setState({\n          hasShortPassword: true\n        });\n      } else {\n        // discard error message\n        this.setState({\n          hasShortPassword: false\n        });\n      } // check if both password doesn't match\n\n\n      if (this.state.password != this.state.confirmed_password) {\n        // display error message\n        this.setState({\n          unMatchedPassword: true\n        });\n      } else {\n        // discard error message\n        this.setState({\n          unMatchedPassword: false\n        });\n      } // check if all security question's answered are less than 5 characters\n\n\n      if (this.state.first_security_question.length <= 5 && this.state.second_security_question.length <= 5 && this.state.third_security_question.length <= 5) {\n        // display error message\n        this.setState({\n          invalid_security: true\n        });\n      } else {\n        // discard error message\n        this.setState({\n          invalid_security: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Registration\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, PostData.map(function (users, index) {\n        users.userName = _this2.state.username;\n        users.password = _this2.state.password;\n        users.emailAddress = _this2.state.username;\n        users.userName = _this2.state.username;\n        users.userName = _this2.state.username;\n        users.userName = _this2.state.username;\n        users.userName = _this2.state.username;\n        users.userName = _this2.state.username;\n        users.userName = _this2.state.username;\n      }), this.state.notProvidedUserName && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Please enter your username\"), this.state.hasShortPassword && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Password length must be greater than 6 characters!\"), this.state.unMatchedPassword && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Please make sure you passwords are matching!\"), this.state.notProvidedEmail && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Please enter your email address\"), this.state.invalidEmail && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Please enter a valid email\"), this.state.invalid_security && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Answer of securtity questions must be of length 6 or more!\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Login Sucessful\"), \"User Name:\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), \"Password:\", \" \", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), \"Confirm Password:\", \" \", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmed_password\",\n        value: this.state.confirmed_password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), \"Email Address:\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email_address\",\n        value: this.state.email_address,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Security Questions for the Purpose of Recovring your Account\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), \"What is your favorite color?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"first_security_question\",\n        value: this.state.first_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), \"What is your father name?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"second_security_question\",\n        value: this.state.second_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), \"What is your mother's middle name?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"third_security_question\",\n        value: this.state.third_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.registerClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return RegistrationComponent;\n}(Component);\n\nexport default RegistrationComponent;","map":{"version":3,"sources":["/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/RegistrationComponent.jsx"],"names":["React","Component","AuthenticationService","EmailValidator","PostData","RegistrationComponent","props","state","username","password","confirmed_password","email_address","first_security_question","second_security_question","third_security_question","showSuccessMessage","notProvidedUserName","invalidEmail","notProvidedEmail","handleUsernameChange","bind","handlePasswordChange","handleChange","registerClicked","event","console","log","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","length","validate","history","push","hasShortPassword","unMatchedPassword","invalid_security","map","users","index","userName","emailAddress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport * as EmailValidator from \"email-validator\";\nimport PostData from \"./MockJSONdata/MockUsers.json\";\n\nclass RegistrationComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmed_password: \"\",\n      email_address: \"\",\n      first_security_question: \"\",\n      second_security_question: \"\",\n      third_security_question: \"\",\n      showSuccessMessage: false,\n      notProvidedUserName: false,\n      invalidEmail: false,\n      notProvidedEmail: false\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.registerClicked = this.registerClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleUsernameChange(event) {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    console.log(event.target.value);\n    this.setState({ password: event.target.value });\n  }\n\n  registerClicked() {\n    AuthenticationService.executeJwtAuthenticationService(\"sept\", \"dummy\").then(\n      response => {\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          \"sept\",\n          response.data.token\n        );\n      }\n    );\n\n    // check if all fields are not empty and both passwords match and email is valid\n    if (\n      this.state.username.length != 0 &&\n      this.state.password.length != 0 &&\n      this.state.password.length > 6 &&\n      this.state.password === this.state.confirmed_password &&\n      this.state.email_address.length != 0 &&\n      EmailValidator.validate(this.state.email_address) === true &&\n      this.state.first_security_question.length != 0 &&\n      this.state.first_security_question.length > 5 &&\n      this.state.second_security_question.length != 0 &&\n      this.state.second_security_question.length > 5 &&\n      this.state.third_security_question.length != 0 &&\n      this.state.third_security_question.length > 5\n    ) {\n      // TodoDataService.createTodo(this.state)\n      // .then(() => this.props.history.push('/login'))\n\n      //    AuthenticationService.RegisterAuthenticationService(this.state)\n      //    .then(() => this.props.history.push('/login'))\n      // redirect ot the main page\n      this.props.history.push(`/login/`);\n    }\n\n    // check if username length is equal to zero\n    if (this.state.username.length == 0) {\n      // display error message\n      this.setState({ notProvidedUserName: true });\n    } else {\n      // discard error message\n      this.setState({ notProvidedUserName: false });\n    }\n    // check if email length is equal to zero\n    if (this.state.email_address.length === 0) {\n      // display error message\n      this.setState({ notProvidedEmail: true });\n    } else {\n      // discard error message\n      this.setState({ notProvidedEmail: false });\n    }\n    // check if username length doesn't equal to zero and its valid\n    if (\n      this.state.email_address.length != 0 &&\n      EmailValidator.validate(this.state.email_address) === false\n    ) {\n      // display error message\n      this.setState({ invalidEmail: true });\n    } else {\n      // discard error message\n      this.setState({ invalidEmail: false });\n    }\n    // check if password length is less than 6 characters\n    if (this.state.password.length <= 6) {\n      // display error message\n      this.setState({ hasShortPassword: true });\n    } else {\n      // discard error message\n      this.setState({ hasShortPassword: false });\n    }\n    // check if both password doesn't match\n    if (this.state.password != this.state.confirmed_password) {\n      // display error message\n      this.setState({ unMatchedPassword: true });\n    } else {\n      // discard error message\n      this.setState({ unMatchedPassword: false });\n    }\n    // check if all security question's answered are less than 5 characters\n    if (\n      this.state.first_security_question.length <= 5 &&\n      this.state.second_security_question.length <= 5 &&\n      this.state.third_security_question.length <= 5\n    ) {\n      // display error message\n      this.setState({ invalid_security: true });\n    } else {\n      // discard error message\n      this.setState({ invalid_security: false });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Registration</h1>\n        <div className=\"container\">\n          {PostData.map((users, index) => {\n            users.userName = this.state.username;\n            users.password = this.state.password;\n            users.emailAddress = this.state.username;\n            users.userName = this.state.username;\n            users.userName = this.state.username;\n            users.userName = this.state.username;\n            users.userName = this.state.username;\n            users.userName = this.state.username;\n            users.userName = this.state.username;\n          })}\n          {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n          {this.state.notProvidedUserName && (\n            <div className=\"alert alert-warning\">\n              Please enter your username\n            </div>\n          )}\n          {this.state.hasShortPassword && (\n            <div className=\"alert alert-warning\">\n              Password length must be greater than 6 characters!\n            </div>\n          )}\n          {this.state.unMatchedPassword && (\n            <div className=\"alert alert-warning\">\n              Please make sure you passwords are matching!\n            </div>\n          )}\n          {this.state.notProvidedEmail && (\n            <div className=\"alert alert-warning\">\n              Please enter your email address\n            </div>\n          )}\n          {this.state.invalidEmail && (\n            <div className=\"alert alert-warning\">\n              Please enter a valid email\n            </div>\n          )}\n          {this.state.invalid_security && (\n            <div className=\"alert alert-warning\">\n              Answer of securtity questions must be of length 6 or more!\n            </div>\n          )}\n          {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n          {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n          User Name:{\" \"}\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          Password:{\" \"}\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          Confirm Password:{\" \"}\n          <input\n            type=\"password\"\n            name=\"confirmed_password\"\n            value={this.state.confirmed_password}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          Email Address:{\" \"}\n          <input\n            type=\"text\"\n            name=\"email_address\"\n            value={this.state.email_address}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <br></br>\n          <h5>Security Questions for the Purpose of Recovring your Account</h5>\n          <br></br>\n          What is your favorite color?{\" \"}\n          <input\n            type=\"text\"\n            name=\"first_security_question\"\n            value={this.state.first_security_question}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          What is your father name?{\" \"}\n          <input\n            type=\"text\"\n            name=\"second_security_question\"\n            value={this.state.second_security_question}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          What is your mother's middle name?{\" \"}\n          <input\n            type=\"text\"\n            name=\"third_security_question\"\n            value={this.state.third_security_question}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <button className=\"btn btn-success\" onClick={this.registerClicked}>\n            Register\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegistrationComponent;\n"]},"metadata":{},"sourceType":"module"}