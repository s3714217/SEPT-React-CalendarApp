{"ast":null,"code":"import _defineProperty from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/ForgotPasswordComponent.jsx\";\nimport React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport PostData from \"./MockJSONdata/MockUsers.json\";\n\nvar ForgotPasswordComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPasswordComponent, _Component);\n\n  function ForgotPasswordComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPasswordComponent).call(this, props)); // initalize variables\n\n    _this.state = {\n      username: \"\",\n      first_security_question: \"\",\n      second_security_question: \"\",\n      third_security_question: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n      usernameDoesNotExistMessage: false,\n      notEnteredUsername: false,\n      usernameDoesNotExist: false,\n      securityQuestionAreAnswered: false,\n      securityQuestionAreAnsweredWrong: false\n    };\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.recoverPasswordClicked = _this.recoverPasswordClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ForgotPasswordComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(event) {\n      console.log(event.target.name);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(event) {\n      console.log(event.target.value);\n      this.setState({\n        password: event.target.value\n      });\n    } // rcover password function, triggered when user clicks on recover password button\n\n  }, {\n    key: \"recoverPasswordClicked\",\n    value: function recoverPasswordClicked() {\n      // check if username field is empty\n      if (this.state.username.length === 0) {\n        // display message if username field is empty\n        this.setState({\n          notEnteredUsername: true\n        });\n      } else {\n        // discard the error message\n        this.setState({\n          notEnteredUsername: false\n        }); // check if username exists in our database, we have mock value for now\n\n        if (this.state.usernameDoesNotExist === true) {\n          // discard error message\n          this.setState({\n            usernameDoesNotExistMessage: false\n          }); // check if all security questions are answered\n\n          if (this.state.first_security_question.length != 0 && this.state.second_security_question.length != 0 && this.state.third_security_question.length != 0) {\n            // cehck if all security questions are answered correct\n            if (this.state.securityQuestionAreAnswered === true) {\n              // for now, let's try and redirect only.\n              this.setState({\n                showSuccessMessage: true\n              });\n              this.setState({\n                hasLoginFailed: false\n              });\n              this.props.history.push(\"/recoverpaasword/\".concat(this.state.username));\n              this.setState({\n                showSuccessMessage: true\n              });\n              this.setState({\n                hasLoginFailed: false\n              });\n            } else {\n              // if one or more security questions is answered incorrect, then display error message\n              this.setState({\n                hasLoginFailed: false\n              });\n              this.setState({\n                securityQuestionAreAnsweredWrong: true\n              });\n            }\n          } else {\n            // if security questions aren't answered, display error message\n            this.setState({\n              showSuccessMessage: false\n            });\n            this.setState({\n              hasLoginFailed: true\n            });\n          }\n        } else {\n          // if username doesn't exist, display error message\n          this.setState({\n            usernameDoesNotExistMessage: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Recover Password\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, PostData.map(function (users, index) {\n        if (_this2.state.username === users.userName) {\n          return _this2.state.usernameDoesNotExist = true;\n        }\n      }), PostData.map(function (users, index) {\n        if (_this2.state.first_security_question === users.favoriteColor && _this2.state.second_security_question === users.fatherName && _this2.state.third_security_question === users.motherMiddleName) {\n          return _this2.state.securityQuestionAreAnswered = true;\n        }\n      }), this.state.notEnteredUsername && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Enter your username\"), this.state.usernameDoesNotExistMessage && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Username doesn't exist in our database\"), this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Please make sure not to leave any field empty\"), this.state.securityQuestionAreAnsweredWrong && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"One or more of your answers are incoreect\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Login Sucessful\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Please Answer these Security Questions for the Purpose of Recovring your Account\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), \"Enter your username?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), \"What is your favorite color?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"first_security_question\",\n        value: this.state.first_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), \"What is your father name?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"second_security_question\",\n        value: this.state.second_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \"What is your mother's middle name?\", \" \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"third_security_question\",\n        value: this.state.third_security_question,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.recoverPasswordClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Recover Password\")));\n    }\n  }]);\n\n  return ForgotPasswordComponent;\n}(Component);\n\nexport default ForgotPasswordComponent;","map":{"version":3,"sources":["/Users/mohammed/Desktop/RMIT1950/COSC2299-Software-Engineering/Major Project/Avengers/frontend/todo-app/src/components/todo/ForgotPasswordComponent.jsx"],"names":["React","Component","AuthenticationService","PostData","ForgotPasswordComponent","props","state","username","first_security_question","second_security_question","third_security_question","hasLoginFailed","showSuccessMessage","usernameDoesNotExistMessage","notEnteredUsername","usernameDoesNotExist","securityQuestionAreAnswered","securityQuestionAreAnsweredWrong","handleUsernameChange","bind","handlePasswordChange","handleChange","recoverPasswordClicked","event","console","log","setState","target","name","value","password","length","history","push","map","users","index","userName","favoriteColor","fatherName","motherMiddleName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport PostData from \"./MockJSONdata/MockUsers.json\";\n\nclass ForgotPasswordComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    // initalize variables\n    this.state = {\n      username: \"\",\n      first_security_question: \"\",\n      second_security_question: \"\",\n      third_security_question: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n      usernameDoesNotExistMessage: false,\n      notEnteredUsername: false,\n      usernameDoesNotExist: false,\n      securityQuestionAreAnswered: false,\n      securityQuestionAreAnsweredWrong: false\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.recoverPasswordClicked = this.recoverPasswordClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleUsernameChange(event) {\n    console.log(event.target.name);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    console.log(event.target.value);\n    this.setState({ password: event.target.value });\n  }\n\n  // rcover password function, triggered when user clicks on recover password button\n  recoverPasswordClicked() {\n    // check if username field is empty\n    if (this.state.username.length === 0) {\n      // display message if username field is empty\n      this.setState({ notEnteredUsername: true });\n    } else {\n      // discard the error message\n      this.setState({ notEnteredUsername: false });\n      // check if username exists in our database, we have mock value for now\n      if (this.state.usernameDoesNotExist === true) {\n        // discard error message\n        this.setState({ usernameDoesNotExistMessage: false });\n        // check if all security questions are answered\n        if (\n          this.state.first_security_question.length != 0 &&\n          this.state.second_security_question.length != 0 &&\n          this.state.third_security_question.length != 0\n        ) {\n          // cehck if all security questions are answered correct\n          if (this.state.securityQuestionAreAnswered === true) {\n            // for now, let's try and redirect only.\n            this.setState({ showSuccessMessage: true });\n            this.setState({ hasLoginFailed: false });\n            this.props.history.push(`/recoverpaasword/${this.state.username}`);\n            this.setState({ showSuccessMessage: true });\n            this.setState({ hasLoginFailed: false });\n          } else {\n            // if one or more security questions is answered incorrect, then display error message\n            this.setState({ hasLoginFailed: false });\n            this.setState({ securityQuestionAreAnsweredWrong: true });\n          }\n        } else {\n          // if security questions aren't answered, display error message\n          this.setState({ showSuccessMessage: false });\n          this.setState({ hasLoginFailed: true });\n        }\n      } else {\n        // if username doesn't exist, display error message\n        this.setState({ usernameDoesNotExistMessage: true });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Recover Password</h1>\n        <div className=\"container\">\n          {PostData.map((users, index) => {\n            if (this.state.username === users.userName) {\n              return (this.state.usernameDoesNotExist = true);\n            }\n          })}\n          {PostData.map((users, index) => {\n            if (\n              this.state.first_security_question === users.favoriteColor &&\n              this.state.second_security_question === users.fatherName &&\n              this.state.third_security_question === users.motherMiddleName\n            ) {\n              return (this.state.securityQuestionAreAnswered = true);\n            }\n          })}\n          {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>p*/}\n          {this.state.notEnteredUsername && (\n            <div className=\"alert alert-warning\">Enter your username</div>\n          )}\n          {this.state.usernameDoesNotExistMessage && (\n            <div className=\"alert alert-warning\">\n              Username doesn't exist in our database\n            </div>\n          )}\n          {this.state.hasLoginFailed && (\n            <div className=\"alert alert-warning\">\n              Please make sure not to leave any field empty\n            </div>\n          )}\n          {this.state.securityQuestionAreAnsweredWrong && (\n            <div className=\"alert alert-warning\">\n              One or more of your answers are incoreect\n            </div>\n          )}\n          {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n          {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n          <h5>\n            Please Answer these Security Questions for the Purpose of Recovring\n            your Account\n          </h5>\n          <br></br>\n          Enter your username?{\" \"}\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          What is your favorite color?{\" \"}\n          <input\n            type=\"text\"\n            name=\"first_security_question\"\n            value={this.state.first_security_question}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          What is your father name?{\" \"}\n          <input\n            type=\"text\"\n            name=\"second_security_question\"\n            value={this.state.second_security_question}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          What is your mother's middle name?{\" \"}\n          <input\n            type=\"text\"\n            name=\"third_security_question\"\n            value={this.state.third_security_question}\n            onChange={this.handleChange}\n          />\n          <br></br>\n          <button\n            className=\"btn btn-success\"\n            onClick={this.recoverPasswordClicked}\n          >\n            Recover Password\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ForgotPasswordComponent;\n"]},"metadata":{},"sourceType":"module"}